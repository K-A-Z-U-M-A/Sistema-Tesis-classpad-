rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Función para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función para verificar si el usuario es el propietario del archivo
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Función para verificar si el usuario es docente
    function isTeacher() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
    
    // Función para verificar si el usuario es miembro del curso
    function isCourseMember(courseId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/courses/$(courseId)/members/$(request.auth.uid));
    }
    
    // Función para verificar si el usuario es docente del curso
    function isCourseTeacher(courseId) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/courses/$(courseId)/members/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/courses/$(courseId)/members/$(request.auth.uid)).data.role == 'teacher';
    }
    
    // Función para verificar tipos de archivo permitidos
    function isValidFileType() {
      return request.resource.contentType.matches('image/.*') ||
             request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('video/.*') ||
             request.resource.contentType.matches('application/msword') ||
             request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document') ||
             request.resource.contentType.matches('application/vnd.ms-excel') ||
             request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') ||
             request.resource.contentType.matches('application/vnd.ms-powerpoint') ||
             request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.presentationml.presentation');
    }
    
    // Función para verificar tamaño máximo (10MB)
    function isValidFileSize() {
      return request.resource.size <= 10 * 1024 * 1024;
    }
    
    // Perfiles de usuario
    match /profiles/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(userId) && isValidFileType() && isValidFileSize();
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Materiales de cursos
    match /courses/{courseId}/materials/{fileName} {
      allow read: if isAuthenticated() && isCourseMember(courseId);
      allow write: if isAuthenticated() && isCourseTeacher(courseId) && isValidFileType() && isValidFileSize();
      allow delete: if isAuthenticated() && isCourseTeacher(courseId);
    }
    
    // Entregas de tareas
    match /courses/{courseId}/posts/{postId}/submissions/{userId}/{fileName} {
      allow read: if isAuthenticated() && (isCourseTeacher(courseId) || isOwner(userId));
      allow write: if isAuthenticated() && isOwner(userId) && isValidFileType() && isValidFileSize();
      allow delete: if isAuthenticated() && (isCourseTeacher(courseId) || isOwner(userId));
    }
    
    // Archivos temporales (para procesamiento)
    match /temp/{userId}/{fileName} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId) && isValidFileType() && isValidFileSize();
      allow delete: if isAuthenticated() && isOwner(userId);
    }
  }
} 